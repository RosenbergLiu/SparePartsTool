@page "/"
@using System.ComponentModel.DataAnnotations;
@using RestSharp;
@inject NavigationManager _navigationManager

@if (Preferences.Default.Get("login", false))
{
    <h1>Welcome! @User</h1>
    <br />
    <button class="btn btn-danger" onclick="@Logout">Logout</button>
    
}
else
{
    <h1>SAG Login</h1>
<EditForm id="loginform" class="form-group" Model="@loginModel" OnValidSubmit="Login">
    <label for="usr">Username</label>
    <InputText id="usr" class="form-control" @bind-Value="loginModel.Username" required/>

    <label for="pwd">Password</label>
    <InputText type="password" id="pwd" class="form-control" @bind-Value="loginModel.Password" required/>

    <InputCheckbox id="save" class="form-check-input" @bind-Value="loginModel.SaveCred" />
    <label class="form-check-label" for="save">Save Login</label>
    <br />
    <br />
    <button class="btn btn-primary form-control" type="submit">Login</button>
        @if (spin)
        {
            <br />
            <Progress Class="mb-3">
                <ProgressBar Type="ProgressType.StripedAndAnimated" Color="ProgressColor.Primary" Width="100" />
            </Progress>
        }
</EditForm>
<br />
<p style="color:red">@StateMessage</p>
}



@code{




    public bool spin{ get; set; }
    public string StateMessage { get; set; }
    public string User { get; set; }
    public class LoginModel
    {
        [Required]
        public string Username { get; set; }
        [Required]
        public string Password { get; set; }
        public bool SaveCred { get; set; }
    }

    public LoginModel loginModel = new()
    {
        Username=Preferences.Default.Get("username",""),
        Password=Preferences.Default.Get("password","")
    };

    private async Task Login()
    {
        spin = true;
        if (loginModel.SaveCred)
        {
            Preferences.Default.Set("save", true);
            Preferences.Default.Set("username", loginModel.Username);
            Preferences.Default.Set("password", loginModel.Password);
        }
        else
        {
            Preferences.Default.Set("save", false);
            Preferences.Default.Set("username", "");
            Preferences.Default.Set("password", "");
        }
        var client = new RestClient("https://partners.gorenje.com/sagcc/Login.aspx");
        var request = new RestRequest("https://partners.gorenje.com/sagcc/Login.aspx",Method.Post);
        request.AddHeader("sec-ch-ua", "\"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\", \"Google Chrome\";v=\"108\"");
        request.AddHeader("sec-ch-ua-mobile", "?0");
        request.AddHeader("sec-ch-ua-platform", "\"Windows\"");
        request.AddHeader("Upgrade-Insecure-Requests", "1");
        request.AddHeader("Content-Type", "application/x-www-form-urlencoded");
        request.AddHeader("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9");
        request.AddHeader("host", "partners.gorenje.com");
        request.AddParameter("__EVENTARGUMENT", "");
        request.AddParameter("__EVENTTARGET", "");
        request.AddParameter("__VIEWSTATE", "/wEPDwUKLTg2NDQ0ODA4MA9kFgICAQ9kFggCAQ8PFgIeCEltYWdlVXJsBUd+L0FwcF9UaGVtZXMvVGVtYS9JbWFnZXMvTG9nb19jdXN0b21lcl9jYXJlX21haW5fYnJhbmRzX2NvcnBvX2xldmVsLnBuZ2RkAgkPZBYQAgEPDxYCHgRUZXh0BQVMb2dpbmRkAgMPDxYCHwEFCFVzZXJuYW1lZGQCBQ8PFgIeCU1heExlbmd0aAIgZGQCBw8PFgIfAQUIUGFzc3dvcmRkZAIJDw8WAh8CAiBkZAILDw8WAh8BBQtSZW1lbWJlciBtZWRkAg8PDxYCHwEFCSAgTG9naW4gIGRkAhEPDxYCHwEFFEkgZm9yZ290IG15IHBhc3N3b3JkZGQCCw9kFgoCAQ8PFgIfAQUUSSBmb3Jnb3QgbXkgcGFzc3dvcmRkZAIDDw8WAh8BBQhVc2VybmFtZWRkAgcPDxYCHwEFBUVtYWlsZGQCCw8PFgIfAQUZU2VuZCByZW5ldyBwYXNzd29yZCBlbWFpbGRkAg0PDxYCHwEFBkNhbmNlbGRkAg0PZBYCAgEPZBYEAgEPDxYCHwEFDU5ldyBwYXNzd29yZDpkZAIFDw8WAh8BBRVDb25maXJtIG5ldyBwYXNzd29yZDpkZBgBBR5fX0NvbnRyb2xzUmVxdWlyZVBvc3RCYWNrS2V5X18WAQUMY2JSZW1lbWJlck1ljAACu9/8Za9JlWYtBkROB5bjcQIYi/yxbRPFzd4oTO8=");
        request.AddParameter("__VIEWSTATEGENERATOR", "24148C73");
        request.AddParameter("btnPrijava", "  Login  ");
        request.AddParameter("pwd", loginModel.Password);
        request.AddParameter("tbxMessages", "");
        request.AddParameter("usr", loginModel.Username);
        var response = await client.ExecuteAsync(request);
        var cookieCollection = client.CookieContainer.GetAllCookies();
        string cookieString = "";
        foreach(var cookie in cookieCollection)
        {
            cookieString += ("; " + cookie.ToString());
        }
        cookieString = cookieString.Substring(2);

        if (cookieString.Length<45)
        {
            StateMessage = " Login Failed";
            loginModel = new LoginModel();
        }
        else
        {
            Preferences.Default.Set("login", true);
            string html = response.Content;
            User = html.Split("User: ")[1].Split("</span>")[0];
            Preferences.Default.Set("user", User);
            Preferences.Default.Set("cookie", cookieString);
        }




        await Task.CompletedTask;
        spin = false;
    }

    private void Logout()
    {
        Preferences.Default.Set("user", "");
        Preferences.Default.Set("login", false);
        _navigationManager.NavigateTo("");
    }

    protected override void OnInitialized()
    {
        User = Preferences.Default.Get("user", "");
    }

}